name: be-ci

on:
  push:
    branches: [ "dev", "feat/**" ]        # dev 또는 feat/* 브랜치에 push 시 실행
  pull_request:
    branches: [ "dev", "feat/**" ]        # dev 또는 feat/* 브랜치에 PR 시 실행
    paths:
      - "**"
      - ".github/workflows/be-ci.yml"

permissions:
  contents: read                          # 최소 권한만 부여 (보안 강화)

concurrency:
  group: be-ci-${{ github.ref }}          # 동일 브랜치의 중복 실행 방지
  cancel-in-progress: true

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 20                   # 무한 대기 방지
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false  # 드래프트 PR은 생략

    env:
      CI: true
      SPRING_PROFILES_ACTIVE: test        # 테스트 환경 프로필 활성화

    steps:
      # 1️⃣ 저장소 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ Gradle Wrapper 검증 (보안)
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      # 3️⃣ Java 설정 (JDK 21: Spring Boot 3.x 안정버전)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      # 4️⃣ Gradle 캐시 최적화 (공식 액션)
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      # 5️⃣ 실행 권한 부여 (리눅스 환경)
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 6️⃣ 버전 출력 (디버깅용)
      - name: Print versions
        run: |
          ./gradlew --version
          java -version

      # 7️⃣ 테스트 및 커버리지 리포트 생성
      - name: Run tests with coverage
        run: ./gradlew clean test jacocoTestReport --info --stacktrace --no-daemon

      # 8️⃣ 빌드 (테스트 생략)
      - name: Assemble project
        run: ./gradlew assemble -x test -x jacocoTestReport --no-daemon

      # 9️⃣ 테스트 결과 (JUnit XML)
      - name: Upload JUnit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: build/test-results/test
          if-no-files-found: ignore
          retention-days: 5

      # 🔟 HTML 테스트 리포트
      - name: Upload JUnit HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-html-report
          path: build/reports/tests/test
          if-no-files-found: ignore
          retention-days: 5

      # ⑪ JaCoCo 커버리지 리포트
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html
          if-no-files-found: ignore
          retention-days: 5

      # ⑫ 빌드 결과물 (JAR)
      - name: Upload build artifact (JAR)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: build/libs/*.jar
          retention-days: 5
