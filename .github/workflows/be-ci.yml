name: be-ci

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      SPRING_PROFILES_ACTIVE: ci
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      # 1️⃣ 저장소 체크아웃
      - name: Checkout source
        uses: actions/checkout@v4

      # 2️⃣ JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️⃣ Gradle Wrapper 실행 권한
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      # 4️⃣ Gradle 캐시
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      # 5️⃣ Gradle 빌드 + 테스트
      - name: Build and Test
        run: ./gradlew clean build --stacktrace --no-daemon

      # 6️⃣ JUnit XML 결과 업로드
      - name: Upload JUnit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: build/test-results/test
          if-no-files-found: ignore
          retention-days: 5

      # 7️⃣ JUnit HTML 리포트 업로드
      - name: Upload JUnit HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-html-report
          path: build/reports/tests/test
          if-no-files-found: ignore
          retention-days: 5

      # 8️⃣ 빌드 결과물 (JAR) 업로드
      - name: Upload build artifact (JAR)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: build/libs/*.jar
          retention-days: 5
